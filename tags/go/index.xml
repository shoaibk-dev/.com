<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on KhanhIceTea B(rain)-log</title><link>https://khanhicetea.com/tags/go/</link><description>Recent content in Go on KhanhIceTea B(rain)-log</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>KhanhIceTea - Licensed under CC BY-NC-ND 3.0 | In God We Trust</copyright><lastBuildDate>Thu, 26 Oct 2017 18:56:33 +0700</lastBuildDate><atom:link href="https://khanhicetea.com/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>How I Learn Golang Goroutines in 1 Day</title><link>https://khanhicetea.com/xiny/how-i-learn-golang-goroutines-in-1-day/</link><pubDate>Thu, 26 Oct 2017 18:56:33 +0700</pubDate><guid>https://khanhicetea.com/xiny/how-i-learn-golang-goroutines-in-1-day/</guid><description>&amp;gt; Learn Golang Basics here
Goroutines &amp;amp; Concurrent View day2.go file
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;time&amp;quot; ) func main() { chanChanChanChan() bufferedChan() synchronizeTask() pingPongGame() selectChannel() outOfTime() nonBlockingChannelWithSelect() closeChannel() rangeOverChannel() doSomethingLater() doInterval() } func chanChanChanChan() { chan1 := make(chan string) chan2 := make(chan string) // By default sends and receives block until both the sender and receiver are ready.</description></item><item><title>How I Learn Golang Basics in 1 Day</title><link>https://khanhicetea.com/xiny/how-i-learn-golang-basics-in-1-day/</link><pubDate>Sat, 21 Oct 2017 00:10:31 +0700</pubDate><guid>https://khanhicetea.com/xiny/how-i-learn-golang-basics-in-1-day/</guid><description>Structure is based on Learn Go in Y Minutes
Install Go Follow this guide : https://golang.</description></item></channel></rss>