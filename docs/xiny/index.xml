<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xinies on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/xiny/</link>
    <description>Recent content in Xinies on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 21 Oct 2017 00:10:31 +0700</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/xiny/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I Learn Golang Basics in 1 Day</title>
      <link>https://khanhicetea.com/xiny/how-i-learn-golang-basics-in-1-day/</link>
      <pubDate>Sat, 21 Oct 2017 00:10:31 +0700</pubDate>
      
      <guid>https://khanhicetea.com/xiny/how-i-learn-golang-basics-in-1-day/</guid>
      <description>Structure is based on Learn Go in Y Minutes
Install Go Follow this guide : https://golang.org/doc/install
Compile and Run go code every 1 second $ watch -d -t -n 1 go run day1.go  Recommended editor Use VisualStudio Code
Basics View day1.go file
package main import ( &amp;quot;fmt&amp;quot; // Formatting standard library m &amp;quot;math&amp;quot; // Alias an imported lib &amp;quot;strconv&amp;quot; // String conversion lib &amp;quot;net/http&amp;quot; &amp;quot;io/ioutil&amp;quot; ) func main() { fmt.</description>
    </item>
    
    <item>
      <title>Learn TypeScript Basics in 2 days</title>
      <link>https://khanhicetea.com/xiny/how-i-learn-typescript-basics-in-2-days/</link>
      <pubDate>Sun, 08 Oct 2017 23:30:00 +0700</pubDate>
      
      <guid>https://khanhicetea.com/xiny/how-i-learn-typescript-basics-in-2-days/</guid>
      <description>Install TypeScript and TSLint $ npm install -g typescript tslint  Compile ts files on changes $ tsc -w  Recommended editor Use VisualStudioCode
Basics View day2.ts file
// Data types in TypeScript let a: boolean = false; let b: number = 42; let c: string = &amp;quot;Helo&amp;quot;; let d: any = &amp;quot;this is anything but not `never`&amp;quot; let e: never; // Can not assign to never type // Function Interface let f: Function = function f() {}; // Ommit data type (TypeScript auto detect it if it can) let g = &amp;quot;YOLO, Who needs type ?</description>
    </item>
    
    <item>
      <title>Learn Webpack Basics in 2 days</title>
      <link>https://khanhicetea.com/xiny/how-i-learn-webpack-basics-in-2-days/</link>
      <pubDate>Thu, 05 Oct 2017 15:50:00 +0700</pubDate>
      
      <guid>https://khanhicetea.com/xiny/how-i-learn-webpack-basics-in-2-days/</guid>
      <description>Introduction Learn from https://webpack.js.org/guides/getting-started/
Clone my repo to follow commit hash by section : https://github.com/khanhicetea/learn-n-earn
Day 1 ,  webpack.config.js
const path = require(&#39;path&#39;); module.exports = { entry: &#39;./src/index.js&#39;, output: { filename: &#39;bundle.js&#39;, path: path.resolve(__dirname, &#39;dist&#39;) } };  Bash
$ ./node_modules/.bin/webpack --config webpack.config.js  Learned
 entry : start point to dive in dependency graph. output : output after pack the web modules  filename : bundle filename path : dist path   Day 2 Import assets ,   CSS file : use style-loader and css-loader Image file : use file-loader WebFont file : use file-loader Data file use json-loader, xml-loader or csv-loader  module: { rules: [ { test: /\.</description>
    </item>
    
  </channel>
</rss>