<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/go/</link>
    <description>Recent content in Go on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 26 Oct 2017 18:56:33 +0700</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How I Learn Golang Goroutines in 1 Day</title>
      <link>https://khanhicetea.com/xiny/how-i-learn-golang-goroutines-in-1-day/</link>
      <pubDate>Thu, 26 Oct 2017 18:56:33 +0700</pubDate>
      
      <guid>https://khanhicetea.com/xiny/how-i-learn-golang-goroutines-in-1-day/</guid>
      <description>&amp;gt; Learn Golang Basics here
Goroutines &amp;amp; Concurrent View day2.go file
package main import ( &amp;quot;fmt&amp;quot; &amp;quot;time&amp;quot; ) func main() { chanChanChanChan() bufferedChan() synchronizeTask() pingPongGame() selectChannel() outOfTime() nonBlockingChannelWithSelect() closeChannel() rangeOverChannel() doSomethingLater() doInterval() } func chanChanChanChan() { chan1 := make(chan string) chan2 := make(chan string) // By default sends and receives block until both the sender and receiver are ready. go func() { fmt.Println(&amp;quot;[1] Passing chan2 !&amp;quot;) chan2 &amp;lt;- &amp;quot;Chan2&amp;quot; fmt.</description>
    </item>
    
    <item>
      <title>How I Learn Golang Basics in 1 Day</title>
      <link>https://khanhicetea.com/xiny/how-i-learn-golang-basics-in-1-day/</link>
      <pubDate>Sat, 21 Oct 2017 00:10:31 +0700</pubDate>
      
      <guid>https://khanhicetea.com/xiny/how-i-learn-golang-basics-in-1-day/</guid>
      <description>Structure is based on Learn Go in Y Minutes
Install Go Follow this guide : https://golang.org/doc/install
Compile and Run go code every 1 second $ watch -d -t -n 1 go run day1.go  Recommended editor Use VisualStudio Code
Basics View day1.go file
package main import ( &amp;quot;fmt&amp;quot; // Formatting standard library m &amp;quot;math&amp;quot; // Alias an imported lib &amp;quot;strconv&amp;quot; // String conversion lib &amp;quot;net/http&amp;quot; &amp;quot;io/ioutil&amp;quot; ) func main() { fmt.</description>
    </item>
    
  </channel>
</rss>