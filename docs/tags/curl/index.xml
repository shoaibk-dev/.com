<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Curl on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/curl/</link>
    <description>Recent content in Curl on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 18 Aug 2018 23:59:59 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/curl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL : Curl override Name Resolution with specific IP address</title>
      <link>https://khanhicetea.com/til/2018-08-18-curl-override-name-resolution-with-specific-ip-address/</link>
      <pubDate>Sat, 18 Aug 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-08-18-curl-override-name-resolution-with-specific-ip-address/</guid>
      <description>Curl override Name Resolution with specific IP address You can overrride the Name Resolution with specific IP address without adding the hostname to /etc/hosts file by using --resolve option.
Syntax :
--resolve &amp;lt;host:port:address&amp;gt;  It will resolve IP address when connect to host on port
Example :
This will connect 127.0.0.1
$ curl --resolve google.com:80:127.0.0.1 &amp;quot;http://google.com/&amp;quot;  But this won&amp;rsquo;t connect 127.0.0.1, because we use 443 port for https</description>
    </item>
    
    <item>
      <title>#TIL : Curl extract info from verbose mode</title>
      <link>https://khanhicetea.com/til/2018-08-07-curl-extract-info-from-verbose-mode/</link>
      <pubDate>Tue, 07 Aug 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-08-07-curl-extract-info-from-verbose-mode/</guid>
      <description>Curl extract info from verbose mode Curl is great tool to do thing with HTTP in command line interface. Sometimes your want to get extra info from HTTP response and put in a variable. Here is the way :
Using --write-out is magical option help you to write out all info you want, or put it in a variable.
Example :
$ code=$(curl --write-out %{response_code} --silent --output /dev/null https://khanhicetea.com) $ echo $code # get http response status code 200  $ tracetime=$(curl --write-out &amp;quot;%{time_namelookup} %{time_connect} %{time_appconnect} %{time_pretransfer} %{time_redirect} %{time_starttransfer} %{time_total}&amp;quot; --silent --output /dev/null https://khanhicetea.</description>
    </item>
    
    <item>
      <title>#TIL : Reuse cookies between multi requests in Curl tool</title>
      <link>https://khanhicetea.com/til/2018-05-22-reuse-cookies-between-multi-requests-in-curl-tool/</link>
      <pubDate>Tue, 22 May 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-05-22-reuse-cookies-between-multi-requests-in-curl-tool/</guid>
      <description>Reuse cookies between multi requests in Curl tool Curl is good lib and tool to simulate HTTP requests. One common usecase is reusing the cookies between 2 or more requests. So you don&amp;rsquo;t have to copied last &amp;ldquo;Set-Cookie&amp;rdquo; of previous response then paste it to &amp;ldquo;Cookie&amp;rdquo; of next request.
To achieve that, you have to use a cookie jar (sounds fun) to store cookies then use that cookie jar in next request.</description>
    </item>
    
    <item>
      <title>#TIL : FTP via curl tool</title>
      <link>https://khanhicetea.com/til/2015-12-03-ftp-via-curl-tool/</link>
      <pubDate>Thu, 03 Dec 2015 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2015-12-03-ftp-via-curl-tool/</guid>
      <description> FTP via curl tool Can upload an file via FTP by curl tool with handy script :
curl -T file_need_to_upload ftp://hostname --user user:passwd  </description>
    </item>
    
  </channel>
</rss>