<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/bash/</link>
    <description>Recent content in Bash on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 05 Oct 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL 2017-10-05 : til, python, bash</title>
      <link>https://khanhicetea.com/til/2017-10-05/</link>
      <pubDate>Thu, 05 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-10-05/</guid>
      <description> BASH Simple HTTP server function helper I use python3 (3.4+) to create a bash function to help me start quickly a simple http server on specified port
function server() { local port=&amp;quot;${1:-8000}&amp;quot; # Getting port number google-chrome &amp;quot;http://127.0.0.1:$port&amp;quot; # Open URL in browser, could change to firefox --new-tab &amp;quot;http://127.0.0.1:$port&amp;quot; python3 -m http.server $port --bind 127.0.0.1 }  </description>
    </item>
    
    <item>
      <title>#TIL 2017-09-27 : sysadmin, shell, linux, til, keyboard, bash</title>
      <link>https://khanhicetea.com/til/2017-09-27/</link>
      <pubDate>Wed, 27 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-09-27/</guid>
      <description>LINUX Send ENTER key to kernel When you try to send an Enter keyboard to linux kernel, it looks like nothing happens.
This is because you only send a key press (KEY DOWN) but don&amp;rsquo;t send an key release (KEY UP) event after that.
SYSADMIN BASH tracing commands Thank Hiro Ishii for teaching me this
set -x will print all running commands in your bash script
So I dove in and look for all set options of BASH.</description>
    </item>
    
    <item>
      <title>#TIL 2017-09-26 : til, sysadmin, shell, bash</title>
      <link>https://khanhicetea.com/til/2017-09-26/</link>
      <pubDate>Tue, 26 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-09-26/</guid>
      <description>SYSADMIN BASH return a value in function Creating function is a good way to refactor your bash script. But BASH doesn&amp;rsquo;t support returning a value in true way, so it makes a bit of challenge to handle that.
You can use this trick
hello() { echo &amp;quot;Hello $1&amp;quot; } hw=$(hello &amp;quot;KhanhIceTea&amp;quot;) echo $hw  But what if you want to echo log message in hello function, it will be merged to returned value.</description>
    </item>
    
    <item>
      <title>#TIL 2017-05-22 : sysadmin, shell, util, tool, compressing, til, bash</title>
      <link>https://khanhicetea.com/til/2017-05-22/</link>
      <pubDate>Mon, 22 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-22/</guid>
      <description>SYSADMIN Using BSD find util to find and exec command on file and folder Simple syntax of find
$ find [find_path] -type [file_type] -exec [command] {} \;  Add filename matching pattern to filter the result
$ find [find_path] -name &amp;quot;*.php&amp;quot; -type [file_type] -exec [command] {} \;  Where file_type is :
 b : block special c : character special d : directory f : regular file l : symbolic link p : FIFO s : socket  Examples:</description>
    </item>
    
    <item>
      <title>#TIL 2017-05-19 : sysadmin, shell, testing, devops, til, automated, bash</title>
      <link>https://khanhicetea.com/til/2017-05-19/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-19/</guid>
      <description>DEVOPS Checking forced push conflicts on source code in auto testing Using automated CI solution likes Travis, Jenkins, DroneCI, &amp;hellip; is good solution to ensure quality of software and no breaks in deployment.
Sometimes, developers force push conflicts part to production branch of source code. If the CI tests only backend (python, ruby, php, go, ..) and forget about frontend code, then your application will be exploded !
So checking the conflicts code is required step before testing backend and deployment.</description>
    </item>
    
    <item>
      <title>Kick start Docker environment on ubuntu</title>
      <link>https://khanhicetea.com/post/kick-start-docker-environment-on-ubuntu/</link>
      <pubDate>Mon, 24 Apr 2017 14:19:39 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/kick-start-docker-environment-on-ubuntu/</guid>
      <description>What does script do :
 Install latest Docker Engine Install latest Docker Compose tool AND last but not least, a congratuation message !  Here is the script :
  Hm.. it&amp;rsquo;s exactly docker images are building instead
 Ref:
 Docker meme from developermemes.com  </description>
    </item>
    
    <item>
      <title>Kick start a LEMP stack on Ubuntu 16.04</title>
      <link>https://khanhicetea.com/post/kick-start-a-lemp-stack-on-ubuntu-16-04/</link>
      <pubDate>Fri, 14 Apr 2017 00:21:14 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/kick-start-a-lemp-stack-on-ubuntu-16-04/</guid>
      <description>LEMP = Linux + EngineX(NginX) + MySQL + PHP
 Too tired for doing same tasks over and over again. I made this script to help me (and you) on kicking start a new LEMP stack on production server. Hope it useful !
What does script do :
 Disable IPv6 (it&amp;rsquo;s not ready for production at the moment) Configure firewall (only accepts port 22, 80 and 443) Disable password authentication to SSH service Upgrade system Install useful tools (git, screen, vim, curl and lego for LetsEncrypt ACME) NginX MySQL 5.</description>
    </item>
    
    <item>
      <title>#TIL 2016-03-26 : sysadmin, shell, command-line, shortcuts, til, bash</title>
      <link>https://khanhicetea.com/til/2016-03-26/</link>
      <pubDate>Sat, 26 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2016-03-26/</guid>
      <description>SYSADMIN Bash shell shortcuts  Ctrl + e : jump cursor to EOL Ctrl + a : jump cursor to BOL (beginning of line) Ctrl + u : delete all from cursor to BOL Ctrl + k : delete all from cursor to EOL Ctrl + r : search history, press again for next search Ctrl + l : clear shell screen Ctrl + c : terminate the command (sometimes have to press twice) Ctrl + z : suspend the command, back to shell.</description>
    </item>
    
    <item>
      <title>#TIL 2015-12-30 : til, sysadmin, command-line, bash</title>
      <link>https://khanhicetea.com/til/2015-12-30/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2015-12-30/</guid>
      <description> SYSADMIN Commands Command lsof List all opened files, sockets, pipes
Eg:
 List processes are using port 80 (need root if port between 1-1023)  # sudo lsof -i:80   List processes are using /bin/bash  # lsof /bin/bash  </description>
    </item>
    
  </channel>
</rss>