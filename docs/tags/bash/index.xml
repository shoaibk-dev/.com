<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/bash/</link>
    <description>Recent content in Bash on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>KhanhIceTea - Licensed under CC BY-NC-ND 3.0 | In God We Trust</copyright>
    <lastBuildDate>Tue, 07 Aug 2018 23:59:59 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL : Curl extract info from verbose mode</title>
      <link>https://khanhicetea.com/til/2018-08-07-curl-extract-info-from-verbose-mode/</link>
      <pubDate>Tue, 07 Aug 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-08-07-curl-extract-info-from-verbose-mode/</guid>
      <description>Curl extract info from verbose mode Curl is great tool to do thing with HTTP in command line interface.</description>
    </item>
    
    <item>
      <title>#TIL : Internal Variables in BASH</title>
      <link>https://khanhicetea.com/til/2018-08-06-internal-variables-in-bash/</link>
      <pubDate>Mon, 06 Aug 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-08-06-internal-variables-in-bash/</guid>
      <description>Internal Variables in BASH $PWD Your current working directory, so you don&amp;rsquo;t have to use CWD=$(pwd)</description>
    </item>
    
    <item>
      <title>#TIL : Simple HTTP server function helper</title>
      <link>https://khanhicetea.com/til/2017-10-05-simple-http-server-function-helper/</link>
      <pubDate>Thu, 05 Oct 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-10-05-simple-http-server-function-helper/</guid>
      <description>Simple HTTP server function helper I use python3 (3.4+) to create a bash function to help me start quickly a simple http server on specified port</description>
    </item>
    
    <item>
      <title>#TIL : BASH tracing commands</title>
      <link>https://khanhicetea.com/til/2017-09-27-bash-tracing-commands/</link>
      <pubDate>Wed, 27 Sep 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-09-27-bash-tracing-commands/</guid>
      <description>BASH tracing commands Thank Hiro Ishii for teaching me this
set -x will print all running commands in your bash script</description>
    </item>
    
    <item>
      <title>#TIL : BASH exiting on first error</title>
      <link>https://khanhicetea.com/til/2017-09-26-bash-exiting-on-first-error/</link>
      <pubDate>Tue, 26 Sep 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-09-26-bash-exiting-on-first-error/</guid>
      <description>BASH exiting on first error Setting a flag set -e to bash script will let the script exit on first error occurs, so if you want to ignore a command just adding || true to suffix</description>
    </item>
    
    <item>
      <title>#TIL : BASH return a value in function</title>
      <link>https://khanhicetea.com/til/2017-09-26-bash-return-a-value-in-function/</link>
      <pubDate>Tue, 26 Sep 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-09-26-bash-return-a-value-in-function/</guid>
      <description>BASH return a value in function Creating function is a good way to refactor your bash script.</description>
    </item>
    
    <item>
      <title>#TIL : zcat : decompressing pipe tool</title>
      <link>https://khanhicetea.com/til/2017-05-22-zcat-decompressing-pipe-tool/</link>
      <pubDate>Mon, 22 May 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-22-zcat-decompressing-pipe-tool/</guid>
      <description>zcat : decompressing pipe tool zcat is a tool that creates a pipe from gz file.</description>
    </item>
    
    <item>
      <title>#TIL : Checking forced push conflicts on source code in auto testing</title>
      <link>https://khanhicetea.com/til/2017-05-19-checking-forced-push-conflicts-on-source-code-in-auto-testing/</link>
      <pubDate>Fri, 19 May 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-19-checking-forced-push-conflicts-on-source-code-in-auto-testing/</guid>
      <description>Checking forced push conflicts on source code in auto testing Using automated CI solution likes Travis, Jenkins, DroneCI, &amp;hellip; is good solution to ensure quality of software and no breaks in deployment.</description>
    </item>
    
    <item>
      <title>Kick start Docker environment on ubuntu</title>
      <link>https://khanhicetea.com/post/kick-start-docker-environment-on-ubuntu/</link>
      <pubDate>Mon, 24 Apr 2017 14:19:39 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/kick-start-docker-environment-on-ubuntu/</guid>
      <description>What does script do :
 Install latest Docker Engine Install latest Docker Compose tool AND last but not least, a congratuation message !</description>
    </item>
    
    <item>
      <title>Kick start a LEMP stack on Ubuntu 16.04</title>
      <link>https://khanhicetea.com/post/kick-start-a-lemp-stack-on-ubuntu-16-04/</link>
      <pubDate>Fri, 14 Apr 2017 00:21:14 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/kick-start-a-lemp-stack-on-ubuntu-16-04/</guid>
      <description>LEMP = Linux + EngineX(NginX) + MySQL + PHP
 Too tired for doing same tasks over and over again.</description>
    </item>
    
    <item>
      <title>#TIL : Bash shell shortcuts</title>
      <link>https://khanhicetea.com/til/2016-03-26-bash-shell-shortcuts/</link>
      <pubDate>Sat, 26 Mar 2016 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2016-03-26-bash-shell-shortcuts/</guid>
      <description>Bash shell shortcuts  Ctrl + e : jump cursor to EOL Ctrl + a : jump cursor to BOL (beginning of line) Ctrl + u : delete all from cursor to BOL Ctrl + k : delete all from cursor to EOL Ctrl + r : search history, press again for next search Ctrl + l : clear shell screen Ctrl + c : terminate the command (sometimes have to press twice) Ctrl + z : suspend the command, back to shell.</description>
    </item>
    
    <item>
      <title>#TIL : Stats your top-10 frequently commands</title>
      <link>https://khanhicetea.com/til/2016-03-26-stats-your-top-10-frequently-commands/</link>
      <pubDate>Sat, 26 Mar 2016 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2016-03-26-stats-your-top-10-frequently-commands/</guid>
      <description>Stats your top-10 frequently commands Run this command, it will show top-10 frequently commands, explain shell</description>
    </item>
    
    <item>
      <title>#TIL : Commands</title>
      <link>https://khanhicetea.com/til/2015-12-30-commands/</link>
      <pubDate>Wed, 30 Dec 2015 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2015-12-30-commands/</guid>
      <description> Commands Command lsof List all opened files, sockets, pipes
Eg:
 List processes are using port 80 (need root if port between 1-1023)  # sudo lsof -i:80   List processes are using /bin/bash  # lsof /bin/bash  </description>
    </item>
    
  </channel>
</rss>