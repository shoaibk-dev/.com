<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Logging on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/logging/</link>
    <description>Recent content in Logging on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jan 2018 23:59:59 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/logging/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL : Basics of Elasticsearch</title>
      <link>https://khanhicetea.com/til/2018-01-25-basics-of-elasticsearch/</link>
      <pubDate>Thu, 25 Jan 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-01-25-basics-of-elasticsearch/</guid>
      <description>Basics of Elasticsearch Last days, I developed a EFK stack to centralize my system logging. I really like the concepts of FluentD, it&amp;rsquo;s better than original stack ELK of elastic company.
So I need to learn basics about Elasticsearch and Kibana
This is what I learned :
# Get all documents from elasticsearch node GET _search { &amp;quot;query&amp;quot;: { &amp;quot;match_all&amp;quot;: {} } } # Check nodes statistics GET /_nodes/stats # Check health of cluster (I don&#39;t know why it is always yello status) GET _cluster/health # Get list of indices (indexes) GET /_cat/indices?</description>
    </item>
    
    <item>
      <title>#TIL : Use journalctl to check system logs</title>
      <link>https://khanhicetea.com/til/2018-01-22-use-journalctl-to-check-system-logs/</link>
      <pubDate>Mon, 22 Jan 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-01-22-use-journalctl-to-check-system-logs/</guid>
      <description>Use journalctl to check system logs Logging and Monitoring are important factor for system admin. Checking the log will help you have a closer look into the issue. One tool could help you will handy features is journalctl.
Here are simple options :
 -f : follow the log (tailf) -u [service] : filter to show only [service] logs --since=[date] : Show entries not older than the specified date --until=[date] : Show entries not newer than the specified date  Example :</description>
    </item>
    
  </channel>
</rss>