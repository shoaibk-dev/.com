<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Http on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/http/</link>
    <description>Recent content in Http on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Mar 2018 23:59:59 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/http/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL : Sending Cookie in AJAX CORs request</title>
      <link>https://khanhicetea.com/til/2018-03-01-sending-cookie-in-ajax-cors-request/</link>
      <pubDate>Thu, 01 Mar 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-03-01-sending-cookie-in-ajax-cors-request/</guid>
      <description>Sending Cookie in AJAX CORs request By default, browser will remove the cookie and authorization header from AJAX CORs request. So before sending out the request, make sure withCredentials must be true.
In this case, CORs response must specify which origin is allowed (mean no wildcard allowed origin rule).</description>
    </item>
    
    <item>
      <title>#TIL : Create cross-platform downloading app URL</title>
      <link>https://khanhicetea.com/til/2018-01-03-create-cross-platform-downloading-app-url/</link>
      <pubDate>Wed, 03 Jan 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-01-03-create-cross-platform-downloading-app-url/</guid>
      <description>Create cross-platform downloading app URL You have a mobile app for both platforms iOS and Android, each platform has different download URL. But your user doesn&amp;rsquo;t know which platform he using. Clicking wrong URL will lead to user bounce-rate.
Solution is making only 1 URL to download your app, which can redirect to right place depends on using platform. So how we achieve this ??
The key of problem is detecting user platform, which can be done by extracting the User-Agent header from http request.</description>
    </item>
    
    <item>
      <title>#TIL : ab failed responses</title>
      <link>https://khanhicetea.com/til/2017-04-21-ab-failed-responses/</link>
      <pubDate>Fri, 21 Apr 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-04-21-ab-failed-responses/</guid>
      <description>ab failed responses When benchmarking a HTTP application server using ab tool, you shouldn&amp;rsquo;t only care about how many requests per second, but percentage of Success responses.
A notice that you must have the same content-length in responses, because ab tool will assume response having different content-length from Document Length (in ab result) is failed response.
Example
Webserver using Flask
from flask import Flask from random import randint app = Flask(__name__) @app.</description>
    </item>
    
  </channel>
</rss>