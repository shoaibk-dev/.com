<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/tags/devops/</link>
    <description>Recent content in Devops on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What I learned in 2017-08-04</title>
      <link>https://khanhicetea.com/til/2017-08-04/</link>
      <pubDate>Fri, 04 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-08-04/</guid>
      <description>DEVOPS Free sandbox server for development We can use Heroku as a forever-free sandbox solution for testing or hosting micro service. Adding a credit card to have 1000 free computing hours.
Heroku will make a service down if no received request come. We can use a cronjob-like service to check service health and keep it live !!! ;)
Cronjob check health SASS : pingdom, statuscake, port-monitor, uptimerobot
Btw, I don&amp;rsquo;t recommend you keep service live but no use, it makes Heroku infrastructure heavy and THAT&amp;rsquo;S NOT FAIR for them !</description>
    </item>
    
    <item>
      <title>What I learned in 2017-05-19</title>
      <link>https://khanhicetea.com/til/2017-05-19/</link>
      <pubDate>Fri, 19 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-19/</guid>
      <description>DEVOPS Checking forced push conflicts on source code in auto testing Using automated CI solution likes Travis, Jenkins, DroneCI, &amp;hellip; is good solution to ensure quality of software and no breaks in deployment.
Sometimes, developers force push conflicts part to production branch of source code. If the CI tests only backend (python, ruby, php, go, ..) and forget about frontend code, then your application will be exploded !
So checking the conflicts code is required step before testing backend and deployment.</description>
    </item>
    
    <item>
      <title>Kick start Docker environment on ubuntu</title>
      <link>https://khanhicetea.com/post/kick-start-docker-environment-on-ubuntu/</link>
      <pubDate>Mon, 24 Apr 2017 14:19:39 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/kick-start-docker-environment-on-ubuntu/</guid>
      <description>What does script do :
 Install latest Docker Engine Install latest Docker Compose tool AND last but not least, a congratuation message !  Here is the script :
  Hm.. it&amp;rsquo;s exactly docker images are building instead
 Ref:
 Docker meme from developermemes.com  </description>
    </item>
    
    <item>
      <title>Kick start a LEMP stack on Ubuntu 16.04</title>
      <link>https://khanhicetea.com/post/kick-start-a-lemp-stack-on-ubuntu-16-04/</link>
      <pubDate>Fri, 14 Apr 2017 00:21:14 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/kick-start-a-lemp-stack-on-ubuntu-16-04/</guid>
      <description>LEMP = Linux + EngineX(NginX) + MySQL + PHP
 Too tired for doing same tasks over and over again. I made this script to help me (and you) on kicking start a new LEMP stack on production server. Hope it useful !
What does script do :
 Disable IPv6 (it&amp;rsquo;s not ready for production at the moment) Configure firewall (only accepts port 22, 80 and 443) Disable password authentication to SSH service Upgrade system Install useful tools (git, screen, vim, curl and lego for LetsEncrypt ACME) NginX MySQL 5.</description>
    </item>
    
    <item>
      <title>How to reload gracefully supervisor program</title>
      <link>https://khanhicetea.com/post/how-to-reload-gracefully-supervisor-program/</link>
      <pubDate>Sat, 25 Mar 2017 13:59:26 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/how-to-reload-gracefully-supervisor-program/</guid>
      <description>Problem We have some managed worker-programs by supervisor. While deploying new codebase of worker, we have to restart them to update new logic.
But it&amp;rsquo;s creepy when supervisor kills all processes of programs and starts again.
WHAT IF IT KILLS A WORKING WORKER ?
Of course, the working task will be fucked up. Database transaction, database migration, sending email and other scheduled tasks will be crashed in middle. Some tasks can&amp;rsquo;t not be reserved, rollbacked or re-runned.</description>
    </item>
    
  </channel>
</rss>