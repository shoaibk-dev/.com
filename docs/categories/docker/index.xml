<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/categories/docker/</link>
    <description>Recent content in Docker on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>KhanhIceTea - Licensed under CC BY-NC-ND 3.0 | In God We Trust</copyright>
    <lastBuildDate>Fri, 23 Feb 2018 23:59:59 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/categories/docker/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL : Build lightweight image by using multistage</title>
      <link>https://khanhicetea.com/til/2018-02-23-build-lightweight-image-by-using-multistage/</link>
      <pubDate>Fri, 23 Feb 2018 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-02-23-build-lightweight-image-by-using-multistage/</guid>
      <description>Build lightweight image by using multistage Docker is great tool to build a pull-n-run application. But sometimes, your image will be large if you build image from a big base image which has heavy compliling toolbox.</description>
    </item>
    
    <item>
      <title>#TIL : Reduce init time MySQL docker image</title>
      <link>https://khanhicetea.com/til/2017-11-22-reduce-init-time-mysql-docker-image/</link>
      <pubDate>Wed, 22 Nov 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-11-22-reduce-init-time-mysql-docker-image/</guid>
      <description>Reduce init time MySQL docker image Original MySQL docker image uses a script to generate ssl certificates for service.</description>
    </item>
    
    <item>
      <title>Building Automated CI server with Drone and Docker</title>
      <link>https://khanhicetea.com/post/building-automated-ci-server-with-drone-and-docker/</link>
      <pubDate>Wed, 08 Nov 2017 17:20:46 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/building-automated-ci-server-with-drone-and-docker/</guid>
      <description>Introduction Docker is great tool to management linux containers. It brings DevOps to next level, from development to production environment.</description>
    </item>
    
    <item>
      <title>#TIL : Changing channel from alpha to stable will remove ALL DATA</title>
      <link>https://khanhicetea.com/til/2017-05-24-changing-channel-from-alpha-to-stable-will-remove-all-data/</link>
      <pubDate>Wed, 24 May 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-24-changing-channel-from-alpha-to-stable-will-remove-all-data/</guid>
      <description>Changing channel from alpha to stable will remove ALL DATA On MacOS, changing Docker channel will remove all data (includes volumes, images, networks and &amp;hellip; everything).</description>
    </item>
    
    <item>
      <title>#TIL : Reducing docker image the right way</title>
      <link>https://khanhicetea.com/til/2017-05-24-reducing-docker-image-the-right-way/</link>
      <pubDate>Wed, 24 May 2017 23:59:59 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-24-reducing-docker-image-the-right-way/</guid>
      <description>Reducing docker image the right way When building an image, Docker engine commit file system layer on every command (RUN, ADD, COPY).</description>
    </item>
    
    <item>
      <title>Backup and Restore ElasticSearch databases using Docker</title>
      <link>https://khanhicetea.com/post/backup-and-restore-elasticsearch-using-docker/</link>
      <pubDate>Sat, 19 Mar 2016 21:07:56 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/backup-and-restore-elasticsearch-using-docker/</guid>
      <description>Introduction One day, your ElasticSearch data is large and you have to move all data to another nodes or you just want backup the data file to somewhere.</description>
    </item>
    
    <item>
      <title>PHP 5.6 vs PHP 7RC8 - Benchmarking using Docker</title>
      <link>https://khanhicetea.com/post/php5.6-vs-php7rc8-benchmarking-using-docker/</link>
      <pubDate>Fri, 04 Dec 2015 14:36:10 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/php5.6-vs-php7rc8-benchmarking-using-docker/</guid>
      <description>New version of PHP, PHP7 has been released yesterday after 11 years of PHP5. I am very excited with it, so I made a benchmark to compare the performance of 2 versions.</description>
    </item>
    
  </channel>
</rss>