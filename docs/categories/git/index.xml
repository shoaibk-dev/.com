<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/categories/git/</link>
    <description>Recent content in Git on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 13 Jun 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/categories/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What I learned in 2017-06-13</title>
      <link>https://khanhicetea.com/til/2017-06-13/</link>
      <pubDate>Tue, 13 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-06-13/</guid>
      <description>GIT Resolving conflict like a boss When using git merge new branch to old branch, you just want use all ours or theirs version but be lazy to update every conflicted file.
grep -lr &#39;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#39; . | xargs git checkout --ours  Or
grep -lr &#39;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&#39; . | xargs git checkout --theirs  Explain : these commands will find any file contains &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; string (conflicted file) and run git checkout --[side]</description>
    </item>
    
  </channel>
</rss>