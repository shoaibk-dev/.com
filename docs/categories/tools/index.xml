<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/categories/tools/</link>
    <description>Recent content in Tools on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/categories/tools/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What I learned in 2017-09-25</title>
      <link>https://khanhicetea.com/til/2017-09-25/</link>
      <pubDate>Mon, 25 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-09-25/</guid>
      <description>SYSADMIN Blocking specified country to prevent from DDOS Last day I checked system logs and got a lot of warning messages mentioned that my server has been attack via Brute-force. So I decided to blocked some countries from connecting to attacked ports (21, 25). They are China, Russia and US.
This site provides a list of IP blocks of specified country
http://www.ipdeny.com/ipblocks/
TOOLS Zip compressing list of files To specify a list of compressed files when using zip cli tool, you could use -@ [file_list] flag.</description>
    </item>
    
    <item>
      <title>What I learned in 2017-04-21</title>
      <link>https://khanhicetea.com/til/2017-04-21/</link>
      <pubDate>Fri, 21 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-04-21/</guid>
      <description>HTTP ab failed responses When benchmarking a HTTP application server using ab tool, you shouldn&amp;rsquo;t only care about how many requests per second, but percentage of Success responses.
A notice that you must have the same content-length in responses, because ab tool will assume response having different content-length from Document Length (in ab result) is failed response.
Example
Webserver using Flask
from flask import Flask from random import randint app = Flask(__name__) @app.</description>
    </item>
    
  </channel>
</rss>