<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on KhanhIceTea B(rain)-log</title>
    <link>https://khanhicetea.com/categories/web/</link>
    <description>Recent content in Web on KhanhIceTea B(rain)-log</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 01 Mar 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://khanhicetea.com/categories/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>#TIL 2018-03-01 : web, sysadmin, http, til, security, hacking, browser</title>
      <link>https://khanhicetea.com/til/2018-03-01/</link>
      <pubDate>Thu, 01 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-03-01/</guid>
      <description>WEB Sending Cookie in AJAX CORs request By default, browser will remove the cookie and authorization header from AJAX CORs request. So before sending out the request, make sure withCredentials must be true.
In this case, CORs response must specify which origin is allowed (mean no wildcard allowed origin rule).
SYSADMIN Prevent source hacking from .git directory exposing Many web project use Git as source version control tools. So in production server, we could expose the hidden .</description>
    </item>
    
    <item>
      <title>#TIL 2018-01-08 : til, web, javascript, jsonp</title>
      <link>https://khanhicetea.com/til/2018-01-08/</link>
      <pubDate>Mon, 08 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-01-08/</guid>
      <description>WEB Bypass CORS by using JSONP callback Sometimes you are blocked from request a cross-origin resource. Instead of adding our domain to allowed list of them, we can use another way to retrieve data from their API by using JSONP (in case they support it).
The mechanism of JSONP is simple, instead of returning a JSON data. It will return a javascript text with passing your data into a function, whose name is declared in query string.</description>
    </item>
    
    <item>
      <title>#TIL 2018-01-03 : web, product, http, mobile, til, security</title>
      <link>https://khanhicetea.com/til/2018-01-03/</link>
      <pubDate>Wed, 03 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2018-01-03/</guid>
      <description>HTTP Create cross-platform downloading app URL You have a mobile app for both platforms iOS and Android, each platform has different download URL. But your user doesn&amp;rsquo;t know which platform he using. Clicking wrong URL will lead to user bounce-rate.
Solution is making only 1 URL to download your app, which can redirect to right place depends on using platform. So how we achieve this ??
The key of problem is detecting user platform, which can be done by extracting the User-Agent header from http request.</description>
    </item>
    
    <item>
      <title>#TIL 2017-12-07 : til, web, proxy, firewall</title>
      <link>https://khanhicetea.com/til/2017-12-07/</link>
      <pubDate>Thu, 07 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-12-07/</guid>
      <description>WEB Using web proxy to bypass firewalls Someday, you will be blocked by a firewall while trying crawling or accessing some website. The reason is they block your IP address from accessing the server.
One solution is using a web proxy (http proxy, socks4 or socks5) to bypass the firewall, by adding the middle-man server between you and target. It&amp;rsquo;s a bit unsecured but you could use for https site only.</description>
    </item>
    
    <item>
      <title>#TIL 2017-08-08 : til, web, keyboard, google, linux</title>
      <link>https://khanhicetea.com/til/2017-08-08/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-08-08/</guid>
      <description>LINUX Remap Capslock to Control key Edit file /etc/default/keyboard and set
XKBOPTIONS=&amp;quot;ctrl:nocaps&amp;quot;  Then, logout and log in again to impact
WEB Ping Google to crawl updated content When you post new content to your website, the fastest way is ping search engines to notify them. After that, they will try to crawl and index your page.
One way to ping search engines is using XMLRPC ping
This is a example XMLRPC request (HTTP POST request with xml body)</description>
    </item>
    
    <item>
      <title>#TIL 2017-05-18 : web, sysadmin, error, til, linux, cloudflare</title>
      <link>https://khanhicetea.com/til/2017-05-18/</link>
      <pubDate>Thu, 18 May 2017 00:00:00 +0000</pubDate>
      
      <guid>https://khanhicetea.com/til/2017-05-18/</guid>
      <description>WEB Cloudflare Error 522 Connection Time out If you are using Cloudflare as a proxied web server, it will provide many benefits about performance (assets caching, prevent DDOS and cheap CDN). But sometimes, you will face to this error &amp;ldquo;522 Connection Time out&amp;rdquo;.
The problems caused by :
 Networking (CF can&amp;rsquo;t touch origin server : Firewall blocking, Network Layer #1,#2,#3 issue) Timeout (origin server process too long than 90 seconds) Empty or invalid response from origin server No or big HTTP headers (&amp;gt; 8Kb) Failed TCP handshake  Ref:</description>
    </item>
    
    <item>
      <title>Sử dụng Frontend Boilerplate cho việc cắt HTML Layout</title>
      <link>https://khanhicetea.com/post/use_frontend_boilerplate_for_development/</link>
      <pubDate>Mon, 13 Jun 2016 18:12:50 +0700</pubDate>
      
      <guid>https://khanhicetea.com/post/use_frontend_boilerplate_for_development/</guid>
      <description>Giới thiệu Khi cắt HTML Layout từ PSD, bạn sẽ đối mặt với việc bên Design hoặc khách hàng thường xuyên yêu cầu thay đổi giao diện, thiết kế. Điều này gây ra không ít phiền nhiễu và tốn thời gian nếu cứ cập nhật hàng tá giao diện nếu sự thay đổi ảnh hưởng đến những phần layout chính (header, footer, sidebar).
Sử dụng bộ khung sườn (boiler-plate) này, sẽ giúp bạn hạn chế thao tác lặp đi, lặp lại.</description>
    </item>
    
  </channel>
</rss>