<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on KhanhIceTea B(rain)-log</title><link>https://khanhicetea.com/categories/python/</link><description>Recent content in Python on KhanhIceTea B(rain)-log</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>KhanhIceTea - Licensed under CC BY-NC-ND 3.0 | In God We Trust</copyright><lastBuildDate>Tue, 21 Aug 2018 14:38:08 +0700</lastBuildDate><atom:link href="https://khanhicetea.com/categories/python/index.xml" rel="self" type="application/rss+xml"/><item><title>SESWatcher : how to prevent Amazon SES account from being suspended</title><link>https://khanhicetea.com/post/seswatcher-prevent-amazon-ses-account-from-being-suspended/</link><pubDate>Tue, 21 Aug 2018 14:38:08 +0700</pubDate><guid>https://khanhicetea.com/post/seswatcher-prevent-amazon-ses-account-from-being-suspended/</guid><description>Introdution At this moment, AWS SES service is the best affordable price and high-quality service to sending (and receiving) programmatic emails.</description></item><item><title>#TIL : Setter and getter behavior of class property in Python3</title><link>https://khanhicetea.com/til/2018-07-30-setter-and-getter-behavior-of-class-property-in-python3/</link><pubDate>Mon, 30 Jul 2018 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2018-07-30-setter-and-getter-behavior-of-class-property-in-python3/</guid><description>Setter and getter behavior of class property in Python3 In previous TIL, I learned about the way to define getter and setter in Javascript</description></item><item><title>#TIL : Context Managers in Python</title><link>https://khanhicetea.com/til/2018-07-24-context-managers-in-python/</link><pubDate>Tue, 24 Jul 2018 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2018-07-24-context-managers-in-python/</guid><description>Context Managers in Python In Python, sometimes you will see this syntax
with something: do_something_else(something) Then you ask yourself, why I have to use this with syntax ?</description></item><item><title>#TIL : Do not use mutable objects as default parameters</title><link>https://khanhicetea.com/til/2018-07-24-do-not-use-mutable-objects-as-default-parameters/</link><pubDate>Tue, 24 Jul 2018 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2018-07-24-do-not-use-mutable-objects-as-default-parameters/</guid><description>Do not use mutable objects as default parameters I learned this from learn-python3
Example :</description></item><item><title>#TIL : Exporting environment variables on virtual env activate</title><link>https://khanhicetea.com/til/2018-04-30-exporting-environment-variables-on-virtual-env-activate/</link><pubDate>Mon, 30 Apr 2018 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2018-04-30-exporting-environment-variables-on-virtual-env-activate/</guid><description>Exporting environment variables on virtual env activate You can put common environment variables to the file venv/bin/activate.</description></item><item><title>Reading NFC Card ID on Ubuntu</title><link>https://khanhicetea.com/post/reading-nfc-card-id-on-ubuntu/</link><pubDate>Wed, 27 Sep 2017 17:00:00 +0700</pubDate><guid>https://khanhicetea.com/post/reading-nfc-card-id-on-ubuntu/</guid><description>Prerequisites Install driver My device is ACS122U : http://www.acs.com.hk/en/products/3/acr122u-usb-nfc-reader/#tab_downloads
Kernel modules # echo &amp;quot;uinput&amp;quot; &amp;gt;&amp;gt; /etc/modules # echo &amp;quot;install nfc /bin/false&amp;quot; &amp;gt;&amp;gt; /etc/modprobe.</description></item><item><title>#TIL : HTTP2 supported for python requests library</title><link>https://khanhicetea.com/til/2017-08-04-http2-supported-for-python-requests-library/</link><pubDate>Fri, 04 Aug 2017 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2017-08-04-http2-supported-for-python-requests-library/</guid><description>HTTP2 supported for python requests library The sophisticated http client in Python is requests, it has simple API but powerful features.</description></item><item><title>Read Input Data From USB Devices in Linux</title><link>https://khanhicetea.com/post/read_input_from_usb_keyboard_in_linux/</link><pubDate>Sun, 20 Mar 2016 23:29:53 +0700</pubDate><guid>https://khanhicetea.com/post/read_input_from_usb_keyboard_in_linux/</guid><description>Introduction You just bought a new input device like barcode scanner, proximity card reader with USB port.</description></item><item><title>#TIL : Reference assign object variable</title><link>https://khanhicetea.com/til/2015-12-04-reference-assign-object-variable/</link><pubDate>Fri, 04 Dec 2015 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2015-12-04-reference-assign-object-variable/</guid><description>Reference assign object variable When you have a object x and assign y = x, y will be a ref of x (it looks like pointer of C).</description></item><item><title>#TIL : String Format Unicode params</title><link>https://khanhicetea.com/til/2015-12-01-string-format-unicode-params/</link><pubDate>Tue, 01 Dec 2015 00:00:01 +0000</pubDate><guid>https://khanhicetea.com/til/2015-12-01-string-format-unicode-params/</guid><description>String Format Unicode params unicode_thing = u&amp;quot;Xin chào mọi người&amp;quot; a = &#39;{}&#39;.format(unicode_thing) will cause the error UnicodeEncodeError: &#39;ascii&#39; codec can&#39;t encode character u&#39;\xe0&#39; in position 6: ordinal not in range(128)</description></item></channel></rss>